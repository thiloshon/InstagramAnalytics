{
    "collab_server" : "",
    "contents" : "require(instaR)\nrequire(RCurl)\nrequire(dplyr)\nrequire(plyr)\nrequire(RJSONIO)\nrequire(ggplot2)\nrequire(anytime)\nrequire(scales)\n\n## Authentication\nappClientID <- \"278fdad3738e444e8833c69bac6c3d1f\"\nappClientSecret <- \"f50c37ec7f974886a25bb3a44b4fc8ee\"\nappAuth <-\n    instaOAuth(appClientID,\n               appClientSecret,\n               scope = c(\"public_content\", \"follower_list\", \"basic\"))\naccessToken <- appAuth$credentials$access_token\nsave(accessToken, file = \"auth\")\n\nsave(insta.data.raw, file = \"Data\")\nwrite.csv(insta.data.raw, file = \"data.csv\")\nt<- read.csv(\"InstaAnalysis/dataNew.csv\")\nt<-t[,2:16]\n\n## Owner Information\nownerInfo <-\n    paste(\"https://api.instagram.com/v1/users/self/?access_token=\",\n          accessToken,\n          sep = \"\")\nownerData <- getURL(ownerInfo) %>% fromJSON()\nownerData\n\n# My Recent Data\nrecent <-\n    paste(\n        \"https://api.instagram.com/v1/users/self/media/recent/?access_token=\",\n        accessToken,\n        sep = \"\"\n    )\nrecentPosts <- getURL(recent)\nrecentData <- fromJSON(recentPosts, flatten = T)\nrecentData\n\n# Users Recent Data\nrecentOfUsers <- paste(\n    \"https://api.instagram.com/v1/users/\",\n    \"2000582268\",\n    \"/media/recent/?access_token=\",\n    accessToken,\n    sep = \"\"\n)\nrecentOfUserPosts <- getURL(recentOfUsers)\nrecentOfUsersData <- fromJSON(recentOfUserPosts, flatten = T)\nrecentOfUsersData\n\n# Users i follow\nfollows <-\n    paste(\n        \"https://api.instagram.com/v1/users/self/follows?access_token=\",\n        accessToken,\n        sep = \"\"\n    )\nfollowsList.raw <- getURL(follows)\nfollowsList <- fromJSON(followsList.raw, flatten = T)\nfollowsList\n\n# Users data\n\nramzan <-\"1269207155\"\nsupul <- \"352993922\"\nshimak <- \"1476182263\"\nruzaik <- \"1503992110\"\nthanu <- \"2000582268\"\n\nusersData <-\n    paste(\n        \"https://api.instagram.com/v1/users/\",\n        thanu,\n        \"/?access_token=\",\n        accessToken,\n        sep = \"\"\n    )\nusersData.raw <- getURL(usersData)\nUsersDataList <- fromJSON(usersData.raw, flatten = T)\nUsersDataList\n\n\n\n# Creating empty dataframe\ninsta.data.raw <- data.frame(matrix(ncol = 11, nrow = 0))\ncolnames(insta.data.raw) <-\n    c(\n        \"userName\",\n        \"createdTime\",\n        \"caption\",\n        \"userHasLiked\",\n        \"likes\",\n        \"tags\",\n        \"filter\",\n        \"commentsCount\",\n        \"type\",\n        \"location\",\n        \"usersInPhoto\"\n    )\n\n# Looped data gathering\nfor (i in 1:20) {\n    userName <- recentData$data[[i]]$user[[4]]\n    createdTime <- recentData$data[[i]]$created_time\n    \n    if (is.null(recentData$data[[i]]$caption)) {\n        caption <- \"null\"\n    } else{\n        caption <- recentData$data[[i]]$caption$text\n    }\n    \n    userHasLiked <- recentData$data[[i]]$user_has_liked\n    likes <- recentData$data[[i]]$likes[[1]]\n    tags <- toString(recentData$data[[i]]$tags)\n    filter <- recentData$data[[i]]$filter\n    commentsCount <- recentData$data[[i]]$comments[[1]]\n    type <- recentData$data[[i]]$type\n    \n    if (is.null(recentData$data[[i]]$location)) {\n        location <- \"null\"\n    } else{\n        location <- recentData$data[[i]]$location$name\n    }\n    \n    usersInPhoto <- length(recentData$data[[i]]$users_in_photo)\n    \n    insta.data.raw <-\n        rbind(\n            insta.data.raw,\n            data.frame(\n                userName = userName,\n                createdTime = anytime(as.numeric(createdTime)),\n                caption = caption,\n                userHasLiked = userHasLiked,\n                likes = likes,\n                tags = tags,\n                filter = filter,\n                commentsCount = commentsCount,\n                type = type,\n                location = location,\n                usersInPhoto = usersInPhoto\n            )\n        )\n}\n\n# Transformation\ninsta.data.raw$commentsAbove6 <- insta.data.raw$commentsCount > 6\n\ninsta.data.raw$weekdays <- weekdays(insta.data.raw$createdTime)\n\ninsta.data.raw$usersAbove0 <- insta.data.raw$usersInPhoto > 0\n\n# Plotting\nqplot(y = insta.data.raw$likes,\n      x = insta.data.raw$weekdays,\n      color = insta.data.raw$userName)\n\nqplot(\n    y = insta.data.raw$likes,\n    x = anydate(insta.data.raw$createdTime),\n    color = insta.data.raw$emptyLocation\n)\n\nqplot(\n    y = insta.data.raw$likes,\n    x = insta.data.raw$filter,\n    color = insta.data.raw$userName\n)\n\nqplot(\n    y = insta.data.raw$likes,\n    x = anydate(insta.data.raw$createdTime),\n    color = insta.data.raw$commentsCount\n)\n\nqplot(y = insta.data.raw$likes,\n      x = insta.data.raw$userName,\n      color = insta.data.raw$userName, geom = \"boxplot\", \n      fill = insta.data.raw$userName)\n\n\n\n#regression or ML\n\nfit <- lm(insta.data.raw$likes ~ ., data = insta.data.raw)\nfit\n\nfit2 <- lm(likes ~ createdTime + commentsCount + usersInPhoto + weekdays, data = insta.data.raw)\nfit2\n    \nqplot(y = insta.data.raw$likes, x = insta.data.raw$createdTime) +\n    scale_x_date(\n        date_breaks = \"1 month\",\n        labels = date_format(\"%b-%Y\"),\n        limits = as.Date(c('2014-07-01', '2016-07-01'))\n    ) + geom_smooth()\n\nggplot(data = insta.data.raw,\n       aes(y = insta.data.raw$likes, x = insta.data.raw$dateNew)) +\n    scale_x_date(\n        date_breaks = \"06 month\",\n        labels = date_format(\"%b-%Y\"),\n        limits = as.Date(c('2014-09-02', '2017-05-01'), \"%Y-%m-%d\")\n    ) + geom_smooth() + geom_point() \n\n\nqplot(y = insta.data.raw$likes, x = insta.data.raw$commentsCount) + geom_smooth()\n\ncor(insta.data.raw[,c(5,8,11)])\n\nlibrary()\n\n\n\n\n\n# Temp\nrecentData <- recentOfUsersData\ninsta.data.raw <- insta.data.raw[, 1:11]\n\n\n# Dump\nh <- length(names(recentData$data[[i]]))\nl <- length(recentData$data[[i]]$users_in_photo)\nprint(h)\nprint(l)\nlength(recentData$data[[1]]$users_in_photo)\n\nrecentData$data[[1]]$users_in_photo\n\nlikedInfo <-\n    paste(\n        \"https://api.instagram.com/v1/users/self/media/liked?access_token=\",\n        accessToken,\n        sep = \"\"\n    )\nlikedData <- getURL(likedInfo) %>% fromJSON()\nlikedData\n\n\niris.rg <-\n    randomForest(\n        Sepal.Length ~ .,\n        data = iris,\n        importance = TRUE,\n        proximity = TRUE\n    )\n\n\n\nsqrt(sum((iris.rg$predicted - iris$Sepal.Length) ^ 2) / nrow(iris))\n\n",
    "created" : 1493821531520.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3648011160",
    "id" : "C97489D0",
    "lastKnownWriteTime" : 1494004173,
    "last_content_update" : 1494004173700,
    "path" : "~/RProjects/Instagram Analytics/insta analysis.R",
    "project_path" : "insta analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}